{
  "name": "lemon-mart",
  "version": "10.0.0",
  "license": "MIT",
  "config": {
    "imageRepo": "073020584345.dkr.ecr.us-east-1.amazonaws.com/lemon-mart",
    "imageName": "lemon-mart",
    "imagePort": "8080",
    "internalContainerPort": "80",
    "awsRegion": "us-east-1",
    "awsEcsCluster": "lemon-mart-cluster",
    "awsService": "lemon-mart-service"
  },
  "engines": {
    "node": "10.15",
    "npm": "6.0.1"
  },
  "scripts": {
    "ng": "ng",
    "style:fix": "import-sort --write \"**/{src,tests,e2e}/**/*.ts\" && prettier --write \"**/{src,tests,e2e}/**/*.{*css,ts}\" && js-beautify \"**/src/**/*.html\"",
    "style": "import-sort -l \"**/{src,tests,e2e}/**/*.ts\" && prettier --check \"**/{src,tests,e2e}/**/*.{*css,ts}\"",
    "start": "ng serve --port 5000",
    "build": "ng build",
    "test": "ng test lemon-mart --browsers Chrome",
    "test:debug": "npm test -- --browsers Chrome --source-map",
    "lint": "run-p lint:ts lint:tsc",
    "lint:fix": "run-s lint:ts:fix lint:tsc",
    "e2e": "ng e2e lemon-mart",
    "build:prod": "ng build --prod",
    "build:integration": "cross-conf-env docker image build -f integration.Dockerfile . -t $npm_package_config_imageRepo:latest",
    "test:prod": "npm test -- --browsers ChromiumNoSandbox --watch=false",
    "test:prod:e2e": "npm run e2e",
    "cypress:run": "npx cypress run --record",
    "test:coverage": "npm test -- --browsers ChromiumNoSandbox --watch=false --code-coverage",
    "posttest:coverage": "http-server -c-1 -o -p 9875 ./coverage",
    "predocker:build": "npm run build",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": " cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:run": "run-s -c docker:stop docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --rm --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` information is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_config_imageName",
    "docker:taillogs": "echo Web Server Logs: && cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "docker:debug": "run-s -cs docker:build docker:run docker:open docker:debugmessage docker:taillogs",
    "aws:login:win": "cross-conf-env aws ecr get-login --no-include-email --region $npm_package_config_awsRegion > dockerLogin.cmd && call dockerLogin.cmd && del dockerLogin.cmd",
    "aws:login:mac": "eval $(aws ecr get-login --no-include-email --region $npm_package_config_awsRegion)",
    "aws:login": "run-p -cs aws:login:win aws:login:mac",
    "aws:deploy": "cross-conf-env docker run --env-file ./.env silintl/ecs-deploy -c $npm_package_config_awsEcsCluster -n $npm_package_config_awsService -i $npm_package_config_imageRepo:latest -r $npm_package_config_awsRegion --timeout 1000",
    "aws:release": "run-s -cs aws:login docker:publish aws:deploy",
    "init:env": "init-dev-env generate-dot-env example.env -f",
    "lint:ts": "tslint --config tslint.json --project . -e \"**/{test,polyfills}.ts\"",
    "lint:ts:fix": "tslint --config tslint.json --fix --project . -e \"**/{test,polyfills}.ts\"",
    "lint:tsc": "tsc --noEmit --skipLibCheck",
    "docker:stop": "cross-conf-env docker stop $npm_package_config_imageName || true",
    "docker:open": "sleep 2 && cross-conf-env open-cli http://localhost:$npm_package_config_imagePort"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "10.0.2",
    "@angular/cdk": "10.0.1",
    "@angular/common": "10.0.2",
    "@angular/compiler": "10.0.2",
    "@angular/core": "10.0.2",
    "@angular/fire": "^6.0.2",
    "@angular/flex-layout": "^10.0.0-beta.32",
    "@angular/forms": "10.0.2",
    "@angular/material": "10.0.1",
    "@angular/platform-browser": "10.0.2",
    "@angular/platform-browser-dynamic": "10.0.2",
    "@angular/router": "10.0.2",
    "@ngrx/data": "^9.2.0",
    "@ngrx/effects": "^9.2.0",
    "@ngrx/entity": "^9.2.0",
    "@ngrx/store": "^9.2.0",
    "@ngrx/store-devtools": "^9.2.0",
    "firebase": "^7.15.5",
    "jwt-decode": "^2.2.0",
    "ngx-mask": "^9.1.2",
    "rxjs": "^6.6.0",
    "subsink": "^1.0.1",
    "ts-enum-util": "^4.0.2",
    "tslib": "^2.0.0",
    "zone.js": "^0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.1000.1",
    "@angular/cli": "10.0.1",
    "@angular/compiler-cli": "10.0.2",
    "@angular/language-service": "10.0.2",
    "@types/jasmine": "~3.5.11",
    "@types/jasminewd2": "~2.0.8",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/jwt-decode": "^2.2.1",
    "@types/node": "^14.0.19",
    "angular-unit-test-helper": "^9.4.0",
    "codelyzer": "^6.0.0",
    "cross-conf-env": "^1.1.2",
    "dev-norms": "^1.7.1",
    "fake-jwt-sign": "^1.1.1",
    "http-server": "^0.12.3",
    "import-sort": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "import-sort-style-module": "^6.0.0",
    "init-dev-env": "^1.0.0",
    "jasmine": "^3.5.0",
    "jasmine-core": "~3.5.0",
    "jasmine-spec-reporter": "~5.0.0",
    "js-beautify": "^1.11.0",
    "karma": "~5.1.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "~3.0.3",
    "karma-edge-launcher": "^0.4.2",
    "karma-htmlfile-reporter": "^0.3.8",
    "karma-jasmine": "~3.3.0",
    "karma-jasmine-html-reporter": "^1.5.0",
    "npm-run-all": "^4.1.5",
    "open-cli": "^6.0.1",
    "prettier": "^2.0.5",
    "protractor": "~7.0.0",
    "rimraf": "^3.0.2",
    "ts-node": "~8.10.2",
    "tslint": "~6.1.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-etc": "^1.11.1",
    "tslint-plugin-prettier": "^2.3.0",
    "typescript": "^3.9.6"
  },
  "importSort": {
    ".ts, .tsx": {
      "parser": "typescript",
      "style": "module",
      "options": {}
    }
  }
}
